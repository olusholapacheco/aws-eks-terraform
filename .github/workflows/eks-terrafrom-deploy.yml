name: Deploy and Destroy EKS Clusters

on:
  push:
    branches:
      - 'Cluster-1'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: modules/eks

    env:
      CLUSTER_NAME: ${{ env.CLUSTER_NAME_CLUSTER_1 }}
      CLUSTER_VERSION: ${{ env.CLUSTER_VERSION_CLUSTER_1 }}
      SUBNET_IDS: ${{ env.SUBNET_IDS_CLUSTER_1 }}
      VPC_ID: ${{ env.VPC_ID }}

    steps:
      - name: Checkout cluster branch
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Deploy EKS Cluster 
        run: |
          terraform init
          terraform plan -var="cluster_name=${CLUSTER_NAME}" -var="cluster_version=${CLUSTER_VERSION}" -var="subnet_ids=${SUBNET_IDS}" -var="vpc_id=${VPC_ID}" -lock=false
          terraform apply -var="cluster_name=${CLUSTER_NAME}" -var="cluster_version=${CLUSTER_VERSION}" -var="subnet_ids=${SUBNET_IDS}" -var="vpc_id=${VPC_ID}" -auto-approve

      - name: Destroy EKS Cluster 
        if: always()
        run: |
          terraform init
          terraform destroy -var="cluster_name=${CLUSTER_NAME}" -var="cluster_version=${CLUSTER_VERSION}" -var="subnet_ids=${SUBNET_IDS}" -var="vpc_id=${VPC_ID}" -auto-approve
